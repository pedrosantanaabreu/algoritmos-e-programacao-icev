"""
todas('exercicio-1' ao 'exercicio-4')
"""
def todas(exercicio): todas = {'exercicio-1' : lambda: todas['exercicio-1-back']({'count' : 1, 'import' : lambda: exec('import os') or exec("os.system('cls||clear')")}), 'exercicio-1-back' : lambda imprimir_arquivo: {'inicial' : lambda: imprimir_arquivo['import']() or [[imprimir_arquivo['import']() or print(f'[ - ] Resultado\n{linha}', end='') or imprimir_arquivo.pop('count')] if imprimir_arquivo.get('count', 'segundo') != 'segundo' else print(linha.removesuffix('\n')) for linha in open(input('[ - ] Insira o comando: python imprimir_arquivo exemplo.txt\n[ > ] ').strip().lower().replace('python imprimir_arquivo ', ''), 'r' ).readlines()], 'enter' : lambda: input('[ - ] Digite "Enter" para continuar...')} and imprimir_arquivo['import']() or [[imprimir_arquivo['import']() or print(f'[ - ] Resultado\n{linha}', end='') or imprimir_arquivo.pop('count')] if imprimir_arquivo.get('count', 'segundo') != 'segundo' else print(linha.removesuffix('\n')) for linha in open(input('[ - ] Insira o comando: python imprimir_arquivo exemplo.txt\n[ > ] ').strip().lower().replace('python imprimir_arquivo ', ''), 'r' ).readlines()] and input('[ - ] Digite "Enter" para continuar...'), 'exercicio-2' : lambda : todas['exercicio-2-back']()['import']() or todas['exercicio-2-back']()['receber'][0](todas['exercicio-2-back']()['lista']), 'exercicio-2-back' : lambda: {'import' : lambda: exec('import os') or exec("os.system('cls||clear')"), 'lista' : [], 'escrever' : [lambda lista: [open(input('[ - ] Informe o nome do arquivo (exemplo.txt)\n[ > ] ').strip().lower(), 'w').writelines(lista)]], 'receber' : [lambda lista: [todas['exercicio-2-back']()['import']() or lista.append(input(f'[ - ] Informe uma linha ou uma linha em branco para fechar\n[ > ] ') + '\n') if '\n' not in lista else todas['exercicio-2-back']()['import']() or todas['exercicio-2-back']()['escrever'][0](lista) and (todas['exercicio-2-back']()['import']() or input('[ - ] Arquivo criado com sucesso\n[ - ] Digite "Enter" para continuar...') or exit()) for _, __ in enumerate(iter(bool, True))]]}, 'exercicio-3' : lambda : todas['exercicio-3-back']()['iniciar'](), 'exercicio-3-back' : lambda : {'import' : lambda: exec('import os') or exec("os.system('cls||clear')"),'iniciar' : lambda: todas['exercicio-3-back']()['import']() or open(input('[ - ] Informe o nome do arquivo final (exemplo.txt)\n[ > ] ').strip().lower(), 'w').writelines(todas['exercicio-3-back']()['import']() or (open(input('[ - ] Informe o 1ยบ arquivo (exemplo.txt)\n[ > ] ').strip().lower(), 'r').readlines() + ['\n'] + open(todas['exercicio-3-back']()['import']() or input('[ - ] Informe o 2ยบ arquivo (exemplo.txt)\n[ > ] ').strip().lower(), 'r').readlines())) or todas['exercicio-3-back']()['import']() or input('[ - ] Arquivo criado com sucesso\n[ - ] Digite "Enter" para continuar...')}, 'exercicio-4' : lambda : todas['exercicio-4-back']()['inicar'](), 'lista-exercicio-4' : [], 'exercicio-4-back' : lambda : {'import' : lambda: exec('import os') or exec("os.system('cls||clear')"), 'obter' : lambda: [todas['lista-exercicio-4'].extend(linha.replace(',', '').replace('.', '').replace('!', '').replace('?', '').replace('(', '').replace(')', '').replace(':', '').replace("'", '').replace('"', '').replace(';', '').strip().lower().split()) for linha in open(input('[ - ] Contador de palavras\n[ - ] Informe o arquivo (exemplo.txt)\n[ > ] ').strip().lower(), "r")], 'resultado' : lambda: [print(f'''[ - ] A palavra "{palavra}" apareceu {todas['lista-exercicio-4'].count(palavra)} vez(es)''') for palavra in sorted(set(todas['lista-exercicio-4']))], 'inicar' : lambda: todas['exercicio-4-back']()['import']() or todas['exercicio-4-back']()['obter']() and todas['exercicio-4-back']()['import']() or print('[ - ] Resultado') or todas['exercicio-4-back']()['resultado']() and input('[ - ] Digite "Enter" para continuar...') if True else ''}}; todas[exercicio]()
